{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","cookies","Cookies","navigator","serviceWorker","ready","then","registration","unregister","logo1","src","alt","style","logo2","LoginButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loginUrl","resourceOwnerKeyCookie","resourceOwnerSecretCookie","_this2","axios","get","response","setState","data","url","cookie_1","cookie_2","keyCookie","split","secretCookie","set","path","expires","Date","react_default","a","createElement","className","href","React","Component","contactbutton","action","type","value","helpbutton","splittingoptions","data-toggle","data-target","sendtweet","charactersused","autosplitting","Header","id","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","width","src_LoginButton","Body","props","_this3","handleaddbox","bind","assertThisInitialized","handleremovebox","boxnum","button","onClick","handleaddbutton","src_Tweet","Footer","Tweet","name","Page","src_Header","src_Body","src_Footer","ReactDOM","render","src_Page","document","getElementById"],"mappings":"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","file":"static/js/main.eb408015.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n//import react from \"react\"\n//https://github.com/facebook/create-react-app\n\nconst logo1 ={\n    src:'src/logo.jpg',\n    alt: 'logo',\n    style:'width:70px;'   \n};\n\nconst logo2 ={\n    src:'src/logo2.jpg',\n    alt: 'logo2',\n    style:'width:55px;'   \n};\n\nclass LoginButton extends React.Component {\n    constructor () {\n        super()\n        this.state = {\n            loginUrl: '',\n            resourceOwnerKeyCookie: '',\n            resourceOwnerSecretCookie: ''\n        }\n\n              \n    }\n\n    componentDidMount() {\n        axios.get('https://api.threadedtweeter.com/login?mode=webapp').then(\n            response => {\n                this.setState({\n                    loginUrl : response.data.url,\n                    resourceOwnerKeyCookie : response.data.cookie_1,\n                    resourceOwnerSecretCookie : response.data.cookie_2\n                })\n\n                let keyCookie = this.state.resourceOwnerKeyCookie.split(\";\")[0].split(\"=\")[1];\n                let secretCookie = this.state.resourceOwnerSecretCookie.split(\";\")[0].split(\"=\")[1];\n\n                cookies.set('resource_owner_key', keyCookie, {path : '/', expires : new Date('2020-1-1')});\n                cookies.set('resource_owner_secret', secretCookie, {path : '/', expires : new Date('2020-1-1')});\n            } \n        ); \n    }\n\n    render() {\n        return (\n            <div className=\"login_button\">\n                <a className=\"button\" href={this.state.loginUrl}>Login with Twitter</a>\n            </div>\n        )\n    }\n}\n\nconst contactbutton = <form action=\"http://google.com\">\n    <input type=\"link\" value=\"contact us\"/>\n        </form>;\n\nconst helpbutton = <form action=\"http://google.com\">\n    <input type=\"link\" value=\"help\"/> \n        </form>;\n\nconst splittingoptions = <div className=\"b-2\">\n                        <button type=\"button\" className=\"notbutton\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                            Splitting options\n                        </button>\n                    </div>;\n\nconst sendtweet = <div className=\"b-3\">\n                        <input type=\"submit2\" value=\"submit\"/></div>;\n                        \nconst charactersused = <div className=\"b-5\">\n                            0/280 characters used\n                        </div>;\nconst autosplitting = <div className=\"b-1\">\n                        Auto splitting: off\n                    </div>;\n\nconst modal =         \n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <div className=\"modal-title\" id=\"exampleModalLabel\">\n                            Tweet splitting allows us to formate your thread for you.\n                        </div>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n\n                    </div>\n                    <div className=\"modal-body\">\n                        ...\n                    </div>\n\n                    <div className=\"modal-footer\">\n\n                        <form>\n                            <div className=\"b-7\" data-dismiss=\"modal\"><input type=\"submit2\" value=\"cancel\"/></div>\n\n                            <div className=\"b-6\">\n                                <input type=\"submit2\" value=\"submit\"/>\n                            </div>\n                        </form> \n\n                    </div>\n                </div>\n            </div>\n        </div>;\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className = \"main-header\">\n            <div className = \"sub-header1\">\n                <div className = \"h-1\">\n                    <div>\n                        Tweet \n                    </div>\n                    <div>\n                        Together\n                    </div>\n                </div>\n                <div className = \"h-2\">\n            <img \n            src={logo1.src}\n            alt={logo1.alt}\n            style={logo1.width} />            \n            </div>\n                <div className = \"h-3\">Threaded Tweeter</div>\n            </div>\n            <div className = \"sub-header2\">\n                <div className = \"h-4\">    \n                     <LoginButton />\n                </div>\n            </div>       \n        </div>\n        );\n    }\n}\n\nclass Body extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleaddbox = this.handleaddbox.bind(this);\n        this.handleremovebox = this.handleremovebox.bind(this);\n        this.state = {boxnum: 1};\n    }\n    handleaddbox(){\n        this.setState({boxnum : this.state.boxnum + 1});\n    }\n    handleremovebox(){\n        this.setState({boxnum : this.state.boxnum - 1});\n    }\n    render() {\n        const boxnum = this.state.boxnum;\n        let button;\n        if(boxnum === 1){\n            button = <div className = \"centeronebutton\">\n            <button className = \"circlebutton\" onClick = {this.handleaddbox}>\n                            +\n                        </button>\n            </div>\n        } else{\n            button = <div className = \"centeronebutton\">\n             <button className = \"circlebutton\" onClick = {this.handleremovebox}>\n                            -\n                        </button> <button className = \"circlebutton\" onClick = {this.handleaddbutton}>\n                            +\n                        </button>\n            </div>\n        }\n        return (\n            <div className = \"main-body\">\n            <div className = \"sub-body\">\n                <div className = \"sub-body1\">\n                    {autosplitting}\n                    {splittingoptions}\n                </div>\n                <form>\n                    <Tweet />\n            {button}\n                    {sendtweet}\n                </form>\n            </div>\n        </div>\n        );\n    }\n}\n\nclass Footer extends React.Component {\n    render() {\n        return (\n\n            <div className = \"main-footer\">\n            <div className = \"h-1\">\n            {helpbutton}\n            </div>\n            <div className = \"h-2\">\n            <img \n            src={logo2.src}\n            alt={logo2.alt}\n            style={logo2.width} />\n            </div>\n            <div className = \"h-5\">  \n            {contactbutton}\n            </div>\n            </div> \n        );\n    }\n}\n\nclass Tweet extends React.Component{\n    render(){\n        return(\n            <div>\n            <textarea type=\"text2\" id=\"tweet\" name=\"tweet\">\n                    </textarea>\n                    <div className = \"sub-body2\">\n                        <div className=\"b-4\">\n                            Add picture\n                        </div>\n            {charactersused} \n                    </div>\n            </div>\n        )\n    }\n}\n\nclass Page extends React.Component {\n    render() {\n        return (\n            <div>\n            <Header />\n            <Body />\n            <Footer />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Page />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}